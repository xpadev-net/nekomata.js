import { IObjectMover, IObjectOptions, IrObjectMoverItem, IrObjectMoverQueue, IrObjectPos } from "./../@types/IrObject";
declare abstract class IrObject {
    protected options: IObjectOptions;
    protected __width: number;
    protected __height: number;
    protected __modified: boolean;
    protected moverQueue: IrObjectMoverQueue;
    readonly __id: string;
    readonly __type: string;
    readonly __NIWANGO_LITERAL: string;
    protected constructor(options: Partial<IObjectOptions>);
    get width(): number;
    set width(val: number);
    get height(): number;
    set height(val: number);
    get scale(): number;
    set scale(val: number);
    get x(): number;
    set x(val: number);
    get __x(): number;
    get y(): number;
    set y(val: number);
    get __y(): number;
    get z(): number;
    set z(val: number);
    get pos(): string;
    set pos(val: string);
    get color(): number;
    set color(val: number);
    get visible(): boolean;
    set visible(val: boolean);
    get alpha(): unknown;
    set alpha(val: unknown);
    get mover(): IObjectMover;
    set mover(val: IObjectMover);
    protected __updateMoverQueue(lastQueue: IrObjectMoverItem | undefined, currentPos: IrObjectPos, targetPos: IrObjectPos): void;
    protected __filterMoverQueue(): void;
    protected __parsePos(): void;
    protected __updateColor(): void;
    protected __draw(): void;
    protected get __isModified(): boolean;
    draw(): void;
    protected calcMover(queue: IrObjectMoverItem | undefined, basePos: number, axis: "x" | "y" | "scale"): number;
}
export { IrObject };
